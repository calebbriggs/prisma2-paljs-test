fragment PostFields on Post {
  id
  createdAt
  updatedAt
  title
  content
  published
  authorId
}

fragment Post on Post {
  ...PostFields
  author {
    ...UserFields
  }
}

query findUniquePost($where: PostWhereUniqueInput!) {
  findUniquePost(where: $where) {
    ...Post
  }
}

query findManyPost(
  $where: PostWhereInput
  $orderBy: [PostOrderByInput!]
  $cursor: PostWhereUniqueInput
  $skip: Int
  $take: Int
) {
  findManyPost(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Post
  }
}

query findManyPostCount(
  $where: PostWhereInput
  $orderBy: [PostOrderByInput!]
  $cursor: PostWhereUniqueInput
  $skip: Int
  $take: Int
) {
  findManyPostCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}

mutation createOnePost($data: PostCreateInput!) {
  createOnePost(data: $data) {
    ...Post
  }
}

mutation updateOnePost($where: PostWhereUniqueInput!, $data: PostUpdateInput!) {
  updateOnePost(where: $where, data: $data) {
    ...Post
  }
}

mutation deleteOnePost($where: PostWhereUniqueInput!) {
  deleteOnePost(where: $where) {
    ...Post
  }
}

mutation deleteManyPost($where: PostWhereInput) {
  deleteManyPost(where: $where) {
    count
  }
}

mutation updateManyPost($where: PostWhereInput, $data: PostUpdateManyMutationInput!) {
  updateManyPost(where: $where, data: $data) {
    count
  }
}
